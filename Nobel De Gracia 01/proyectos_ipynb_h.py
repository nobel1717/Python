# -*- coding: utf-8 -*-
"""ProyectoS.ipynb h

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TDjlJONmlCP0eGtsUkZoKa1gAfUnPzwc
"""

import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt

link = "/content/student-mat.csv"

data= pd.read_csv(link,sep=";")

len(data)

#verificamos si hay valores nulos 
data.isnull()

columnas= ["school","sex","age","address","Pstatus","guardian","traveltime","studytime","failures","paid","internet","health","absences","G1","G2","G3"]

data1 = data[[*columnas]]

# Creamos una DataFrame para cada escuela y curso, por el momento solo hare el de matematicas
groups = data1.groupby(data1.school)
GP_mate= groups.get_group("GP")
MS_mate=groups.get_group("MS")

# School  Gabriel Pereira Curso de Matematicas 
GP_mate.head()

# School Mousinho da Silveira Curso de Matematicas 
MS_mate.head()

#Grafica segun el sexo de los estudiantes de la escuela Gabriel Pereira 
GP_mate["sex"].value_counts().plot(kind="pie",autopct='%0.0f%%')

#Grafica segun el sexo de los estudiantes de la escuela Mousinho da Silveira 
MS_mate["sex"].value_counts().plot(kind="pie",autopct='%0.0f%%')

#Grafica segun la edad de los estudiantes de la escuela Gabriel Pereira 
GP_mate["age"].value_counts().plot(kind="pie",autopct='%0.0f%%')

#Grafica segun la edad de los estudiantes de la escuela Mousinho da Silveira 
MS_mate["age"].value_counts().plot(kind="pie",autopct='%0.0f%%')

# Muestre el promedio de las edades de cada curso de cada escuela

df = pd.DataFrame(data1)
mean_df = df['age'].mean()
print(mean_df)

# Muestre el promedio de las notas G1, G2, G3 de cada curso de cada escuela
Gf1 = pd.DataFrame(data1)
mean_Gf1 = Gf1['G1'].mean()
print("G1",mean_Gf1)

Gf2 = pd.DataFrame(data1)
mean_Gf2 = Gf2['G2'].mean()
print("G2", mean_Gf2)

Gf3 = pd.DataFrame(data1)
mean_Gf3 = Gf2['G3'].mean()
print("G3", mean_Gf3)

import pandas as pd

dic = {'Promedios': [10.90, 10.71, 10.41]}
df1 = pd.DataFrame(dic, index=["G1","G2","G3"])

df1

axis = df1.plot.bar(rot=0)
print(axis)
plt.show()

#Grafique el promedio de las notas en un gráfico de barras horizontal

# Halle el valor máximo de las ausencias y considere dicho valor como el total de clases del curso,
# de manera que pueda sacar un porcentaje de asistencia para cada estudiante
maxClm = data['absences'].max() 
  
print("Maximum value in column 'x': " )  
print(maxClm)

import numpy as np
import pandas as pd

data1["porcentaje"]=(((data1["absences"]-75)*-1)/75)
data1

# Utilizando el absences calcule el porcentaje de asistencia
data1["porcentaje"]=data1["porcentaje"].apply("{:.0%}".format)
data1

data1.dtypes

import numpy as np
condi = [
    (((data1["absences"]-75)*-1)>60)&(data1["G3"]<16)&(data1["G3"]>9),
    (((data1["absences"]-75)*-1)>60)&(data1["G3"]>15), 
    (((data1["absences"]-75)*-1)<60)
]
opciones = ["1","0","-"]
data1["extra"]=np.select(condi,opciones)
data1.head()

# Condicionales para saber si aprueba o no el curso
condi = [
    (((data1["absences"]-75)*-1)<60),
    (((data1["absences"]-75)*-1)>60)&(data1["G3"]<10), 
    (((data1["absences"]-75)*-1)>60)&(data1["G3"]<16)&(data1["G3"]>9),
    (((data1["absences"]-75)*-1)>60)&(data1["G3"]>15)&(data1["G3"]>9)                                                                 
]
opciones = ["0","0","1","1"]
data1["approved"]=np.select(condi,opciones)
data1.head()

#Grafia de los aprovados 
data1["approved"].value_counts().plot(kind="pie",autopct='%0.0f%%')

data2 = data1
# Creamos una DataFrame para cada escuela y curso, por el momento solo hare el de matematicas
groups = data1.groupby(data1.school)
GP_mate= groups.get_group("GP")
MS_mate=groups.get_group("MS")

GP_mate.head()

#Grafica segun si aprovaron de los estudiantes de la escuela Gabriel Pereira 
GP_mate["approved"].value_counts().plot(kind="pie",autopct='%0.0f%%')

#Grafica segun la edad de los estudiantes de la escuela Mousinho da Silveira  
MS_mate["approved"].value_counts().plot(kind="pie",autopct='%0.0f%%')

""" CURSO DE PORTUGUES"""

import numpy as np 
import pandas as pd

# curso de portuguez 
link = "/content/student-por.csv"

dato= pd.read_csv(link,sep=";")

#verificamos si hay valores nulos 
dato.isnull()

columnas= ["school","sex","age","address","Pstatus","guardian","traveltime","studytime","failures","paid","internet","health","absences","G1","G2","G3"]

dato1 = dato[[*columnas]]

# Creamos una DataFrame para cada escuela y curso, por el momento solo hare el de Portuguez 
groups = dato1.groupby(dato1.school)
GP_port= groups.get_group("GP")
MS_port=groups.get_group("MS")

# School  Gabriel Pereira Curso de Portuguez 
GP_port.head()

# School Mousinho da Silveira Curso de Portuguez 
MS_port.head()

#Grafica segun el sexo de los estudiantes de la escuela Gabriel Pereira del curso de Portugues 
GP_port["sex"].value_counts().plot(kind="pie",autopct='%0.0f%%')

#Grafica segun el sexo de los estudiantes de la escuela Mousinho da Silveira 
MS_port["sex"].value_counts().plot(kind="pie",autopct='%0.0f%%')

#Grafica segun la edad de los estudiantes de la escuela Gabriel Pereira 
GP_port["age"].value_counts().plot(kind="pie",autopct='%0.0f%%')

MS_port["age"].value_counts().plot(kind="pie",autopct='%0.0f%%')

# Muestre el promedio de las edades de cada curso de cada escuela

dfp = pd.DataFrame(dato1)
mean_dfp = dfp['age'].mean()
print(mean_dfp)

# Muestre el promedio de las notas G1, G2, G3 de cada curso de cada escuela
Gf1 = pd.DataFrame(dato1)
mean_Gf1 = Gf1['G1'].mean()
print("G1",mean_Gf1)

Gf2 = pd.DataFrame(dato1)
mean_Gf2 = Gf2['G2'].mean()
print("G2 ", mean_Gf2)

Gf3 = pd.DataFrame(dato1)
mean_Gf3 = Gf2['G3'].mean()
print("G3", mean_Gf3)

import pandas as pd

dic = {'Promedios': [11.39, 11.57, 11.90]}
df = pd.DataFrame(dic, index=["G1","G2","G3"])

df

# Grafica de primedios de las notas 
axis = df.plot.bar(rot=0)
print(axis)
plt.show()

# Halle el valor máximo de las ausencias y considere dicho valor como el total de clases del curso,
# de manera que pueda sacar un porcentaje de asistencia para cada estudiante
maxClm = dato1['absences'].max() 
  
print("Maximum value in column 'x': " )  
print(maxClm)

import numpy as np
import pandas as pd

dato1["porcentaje"]=(((dato1["absences"]-75)*-1)/75)
dato1

# Utilizando el absences calcule el porcentaje de asistencia
dato1["porcentaje"]=dato1["porcentaje"].apply("{:.0%}".format)
dato1



import numpy as np
condi = [
    (((dato1["absences"]-75)*-1)>60)&(dato1["G3"]<16)&(dato1["G3"]>9),
    (((dato1["absences"]-75)*-1)>60)&(dato1["G3"]>15), 
    (((dato1["absences"]-75)*-1)<60)
]
opciones = ["1","0","-"]
dato1["extra"]=np.select(condi,opciones)
dato1.head()



# Condicionales para saber si aprobó o no 
condi = [
    (((dato1["absences"]-75)*-1)<60),
    (((dato1["absences"]-75)*-1)>60)&(dato1["G3"]<10), 
    (((dato1["absences"]-75)*-1)>60)&(dato1["G3"]<16)&(dato1["G3"]>9),
    (((dato1["absences"]-75)*-1)>60)&(dato1["G3"]>15)&(dato1["G3"]>9)                                                                 
]
opciones = ["0","0","1","1"]
dato1["approved"]=np.select(condi,opciones)
dato1.head()

dato1["approved"].value_counts().plot(kind="pie",autopct='%0.0f%%')

from pandas.io import excel
import pandas as pd


with pd.ExcelWriter('resultado[15-10-22].xlsx') as writer:
  data1.to_excel(writer, sheet_name='Matemáticas')
  GP_mate.to_excel(writer, sheet_name='Gabriel Pereira Mate')
  MS_mate.to_excel(writer, sheet_name='Mousinho da Silveira Mate')
  dato1.to_excel(writer, sheet_name='Portugués')
  GP_port.to_excel(writer, sheet_name='Gabriel Pereira Portu')
  MS_port.to_excel(writer, sheet_name='Mousinho da Silveira Portu')

from google.colab import files
files.download('resultado[15-10-22].xlsx')

from google.colab import files 
files.download("/content/resultado[15-10-22].xlsx")